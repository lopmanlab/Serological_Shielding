ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4) +
facet_wrap("variable", ncol = 2, scales = 'free')
df.prsf
head(test)
v.chains
strsplit(v.chains[1], '_')
strsplit(v.chains[1], '_')[[1]][2]
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
head(test)
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4) +
facet_grid(variable~region, scales='free')
head(test)
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
head9test)
head(test)
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4) +
facet_grid(variable~region, scales='free')
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
head(test)
df.prsf
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
head(test)
paste(colnames(df.prsf, df.prsf['nyc',]))
paste(colnames(df.prsf), df.prsf['nyc',])
paste(colnames(df.prsf), df.prsf['nyc',], sep='=')
paste(colnames(df.prsf), round(df.prsf['nyc',],3), sep='=')
colnames(df.prsf)
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
head(test)
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap(variable,, ncol=3, scales='free')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap(variable, ncol=3, scales='free')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap('variable', ncol=3, scales='free')
head(test)
test$variable
table(test$variable)
ls.chains = sapply(v.chains, function(x){
# Read in csv
res = read.csv(paste("OUTPUT/", x, sep='', collapse = ''))
# Data-frame
res = as.data.frame(res)
# Remove last column of NA's since I'm also bad at writing matlab outputs
res = res[,-ncol(res)]
# Add positions
res$idx = 1:(table(res$i_chain)[1])
# add region
res$region = strsplit(x, '_')[[1]][2]
# melt
res = melt(res, c('idx', 'i_chain', 'LogLikelihood', 'region'))
return(res)
v.map = paste(colnames(df.prsf), round(df.prsf['nyc',],3), sep='=')
names(v.map) = colnames(df.prsf)
res$variable = v.map[as.character(res$variable)]
# Return
list(res)
})
test = do.call('rbind', ls.chains)
head(test)
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
head(test)
ls.chains[[1]]$variable
colnames(df.prsf)
levels(ls.chains[[1]]$variable)
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap('variable', ncol=3, scales='free')
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap('variable', ncol=7, scales='free')
v.chains
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap('variable', ncol=7, scales='free')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap('variable', ncol=3, scales='free')
test[test$region == 'wash' & test$i_chain == 5,] = NULL
test = test[!(test$region == 'wash' & test$i_chain == 5),]
test[test$region == 'wash']
test[test$region == 'wash',]
table(test[test$region == 'wash', 'i_chain'])
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap('variable', ncol=3, scales='free')
test = test[!(test$region == 'wash' & test$i_chain == 4),]
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap('variable', ncol=3, scales='free')
df.prsf
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_wrap('variable', ncol=3, scales='free')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_grid(variable~region, scales='free')
ggplot(test[test$variable != 'R0', ], aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
ylim(c(0,1)) +
facet_grid(variable~region, scales='free')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.4, aes()) +
facet_grid(variable~region, scales='free')
ggplot(test, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.2, aes()) +
facet_grid(variable~region, scales='free')
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
fviz_pca_ind(df.pcs, geom.ind = 'point', habillage = v.hab, addEllipses = T)
fviz_pca_ind(df.pcs, geom.ind = 'point', habillage = v.hab, addEllipses = T)
test = ls.chains[[region]]
head(test)
plotmatrix(iris[,1:3]) + stat_density2d()
require(DescTools)
install.packages('DescTools')
plotmatrix(iris[,1:3]) + stat_density2d()
plotmatrix(iris[,1:3]) + stat_density2d()
require(Desctools)
require(DescTools)
plotmatrix(iris[,1:3]) + stat_density2d()
plotmatrix(iris[,1:3]) + stat_density2d()
PlotMatrix(iris[,1:3]) + stat_density2d()
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
pairs(iris[,1:3])
pairs(iris[,1:3], panel=panel.contour)
install.packages('spatstat')
require(spatstat)
pairs(iris[,1:3], panel=panel.contour)
pairs(test[,1:3], panel=panel.contour)
head(test)
test = ls.chains[[region]]
head(test)
pairs(test[,1:3], panel=panel.contour)
pairs(test[,1:6], panel=panel.contour)
ggplot(test, aes(x = q, y = c)) + geom_density_2d()
ggplot(test, aes(x = q, y = c)) + geom_density_2d_filled()
ggplot(test, aes(x = q, y = c)) + geom_density_2d_filled() + facet_wrap('i_chain')
ggplot(test, aes(x = q, y = c)) + geom_density_2d + facet_wrap('i_chain')
ggplot(test, aes(x = q, y = c)) + geom_density_2d() + facet_wrap('i_chain')
ggplot(test, aes(x = q, y = c)) + geom_point() + facet_wrap('i_chain')
ggplot(test, aes(x = q, y = c)) + geom_density_2d()
install.packages('boom')
install.packages('Boom')
require(Boom)
pairs.density(test[,1:3])
pairs.density(test[,1:3])
PairsDensity(test[,1:3])
PairsDensity(test[,1:3], nlevels = 5)
PairsDensity(test[,1:6], nlevels = 5)
pairs(test[,1:3], nlevels = 5)
test
pairs(test[,1:3], panel=panel.contour)
ggplot(test, aes(x=q, y=c)) + geom_point()
install.packages('ggmcmc')
install.packages('ggally')
install.packages('GGally')
require(GGally)
ggpairs(test[,1:3])
ggpairs(test[,1:3], lower = list(continuous = "density"))
head(test)
ggpairs(test[,1:6], lower = list(continuous = "density"))
test = test[test$i_chain != 4,]
ggpairs(test[,1:6], lower = list(continuous = "density"))
# Contours
region = 'nyc'
test = ls.chains[[region]]
if(region == 'wash'){
test = test[test$i_chain != 4,]
}
ggpairs(test[,1:6], lower = list(continuous = "density"))
region = 'sflor'
test = ls.chains[[region]]
if(region == 'wash'){
test = test[test$i_chain != 4,]
}
ggpairs(test[,1:6], lower = list(continuous = "density"))
# Contours
for(region in c('wash', 'sflor', 'nyc')){
test = ls.chains[[region]]
if(region == 'wash'){
test = test[test$i_chain != 4,]
}
test = test[test$i_chain == 1,]
p_pairs= ggpairs(test[,1:6], lower = list(continuous = "density"))
ggsave(paste(region, '_countour_1.png', sep='', collapse='')
, p_pairs
, 'png'
, width = 12
, height = 12)
}
# Contours
for(region in c('wash', 'sflor', 'nyc')){
for(i in 2:11){
test = ls.chains[[region]]
# if(region == 'wash'){
#   test = test[test$i_chain != 4,]
# }
test = test[test$i_chain == 1,]
p_pairs= ggpairs(test[,1:6], lower = list(continuous = "density"))
ggsave(paste(region, '_countour_', i, '.png', sep='', collapse='')
, p_pairs
, 'png'
, width = 12
, height = 12)
}
}
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
df.prsf
test = df.prsf
melt(test)
test$region = rownames(test)
mest = melt(test, 'region')
ggplot(mest, aes(x = variable, y = value, fill = variable)) + geom_wrap('region') + geom_bar(stat='identity') + scale_fill_brewer(palette = 'Paired')
ggplot(mest, aes(x = variable, y = value, fill = variable)) + facet_wrap('region') + geom_bar(stat='identity') + scale_fill_brewer(palette = 'Paired')
ggplot(mest, aes(x = variable, y = value, color = variable)) + facet_wrap('region') + geom_point() + scale_fill_brewer(palette = 'Paired')
ggplot(mest, aes(x = variable, y = value, color = variable)) + facet_wrap('region') + geom_point() + scale_fill_brewer(palette = 'Paired') + coord_flip()
ggplot(mest, aes(x = variable, y = value, color = variable)) + facet_wrap('region') + geom_point() + scale_fill_brewer(palette = 'Paired')
ggplot(mest, aes(x = variable, y = value)) + facet_wrap('region') + theme_minimal() + geom_point(size=3) + scale_fill_brewer(palette = 'Paired') + geom_hline(yintercept = 1.01, color = 'red')
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
p.traces
head(df.chains)
ls.chains[[1]]
df.constraints
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.2, aes()) +
facet_grid(variable~region, scales='free')
p.traces
head(df.chains)
df.chains = do.call('rbind',lapply(ls.chains, function(x){
n_rows = nrow(x)
temp_df = x
temp_df[n_rows+(1:2),] = temp_df[n_rows,]
temp_df[n_rows+(1:2),colnames(df.constraints)] = df.constraints
return(melt(temp_df, c('idx', 'i_chain', 'LogLikelihood', 'region')))
}))
df.chains = df.chains[!(df.chains$region == 'wash' & df.chains$i_chain == 4),]
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = factor(i_chain))) +
geom_line(alpha = 0.2, aes()) +
facet_grid(variable~region, scales='free')
p.traces
head(df.chains)
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 12, width = 14)
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2, aes()) +
facet_grid(variable~region, scales='free')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 12, width = 14)
temp.prsf = df.prsf
temp.prsf$region = rownames(temp.prsf)
melt.prsf = melt(temp.prsf, 'region')
temp.prsf = df.prsf
temp.prsf$region = rownames(temp.prsf)
melt.prsf = melt(temp.prsf, 'region')
ggplot(melt.prsf, aes(x = variable, y = value, color = variable)) +
facet_wrap('region') + geom_point() + scale_fill_brewer(palette = 'Paired')
ggplot(melt.prsf, aes(x = variable, y = value, color = variable)) +
facet_wrap('region') +
geom_point(size = 3) +
scale_color_brewer(palette = 'Paired')
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point(size = 3)
ggplot(melt.prsf, aes(x = variable, y = value, fill = region)) +
geom_bar(stat = 'identity') +
geom_hline(color = 'red', yintercept = 1.01)
ggplot(melt.prsf, aes(x = variable, y = value, fill = region)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_hline(color = 'red', yintercept = 1.01)
ggplot(melt.prsf, aes(x = variable, y = value, fill = region)) +
geom_bar(stat = 'identity', position = 'dodge') +
geom_hline(color = 'red', yintercept = 1.01) +
scale_y_continuous(limits = c(1, 1.1))
ggplot(melt.prsf, aes(x = variable, y = value, fill = region)) +
geom_point(stat = 'identity', position = 'dodge') +
geom_hline(color = 'red', yintercept = 1.01) +
scale_y_continuous(limits = c(1, 1.1))
ggplot(melt.prsf, aes(x = variable, y = value, fill = region)) +
geom_point(stat = 'identity', position = 'dodge') +
geom_hline(color = 'red', yintercept = 1.01) +
scale_y_continuous(limits = c(1, 1.1)) +
theme_minimal() +
ggplot(melt.prsf, aes(x = variable, y = value, fill = region)) +
geom_point(stat = 'identity', position = 'dodge') +
geom_hline(color = 'red', yintercept = 1.01) +
scale_y_continuous(limits = c(1, 1.1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=0))
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point() +
geom_hline(color = 'red', yintercept = 1.01) +
scale_y_continuous(limits = c(1, 1.1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=0))
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point() +
geom_hline(color = 'red', yintercept = 1.01) +
scale_y_continuous(limits = c(1, 1.1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=0, vjust = 0))
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point() +
geom_hline(color = 'red', yintercept = 1.01) +
scale_y_continuous(limits = c(1, 1.1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=0, vjust = 0))
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point() +
geom_hline(color = 'red', yintercept = 1.01) +
scale_y_continuous(limits = c(1, 1.1)) +
theme_minimal() +
coord_flip()
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point() +
geom_hline(color = 'red', yintercept = 1.01) +
theme_minimal() +
coord_flip()
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point(size = 3) +
geom_hline(color = 'red', yintercept = 1.01) +
theme_minimal() +
coord_flip()
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point(size = 3) +
geom_hline(color = 'red', yintercept = 1.01) +
theme_minimal(size = 12) +
coord_flip() +
xlab('value')
ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point(size = 3) +
geom_hline(color = 'red', yintercept = 1.01) +
theme_minimal(base_size = 12) +
coord_flip() +
xlab('RHat')
temp.prsf = df.prsf
temp.prsf$region = rownames(temp.prsf)
melt.prsf = melt(temp.prsf, 'region')
p.rhats = ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point(size = 3) +
geom_hline(color = 'red', yintercept = 1.01) +
theme_minimal(base_size = 12) +
coord_flip() +
xlab('RHat')
ggsave('2020-10-22_GMBConvergenceRhats.png', p.rhats, height = 4, width = 10)
p.rhats = ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point(size = 3) +
geom_hline(color = 'red', yintercept = 1.01) +
theme_minimal(base_size = 12) +
coord_flip() +
xlab('RHat')
ggsave('2020-10-22_GMBConvergenceRhats.png', p.rhats, height = 3, width = 10)
p.rhats = ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point(size = 3) +
geom_hline(color = 'red', yintercept = 1.01) +
theme_minimal(base_size = 12) +
coord_flip() +
ylab('RHat') +
xlab('')
ggsave('2020-10-22_GMBConvergenceRhats.png', p.rhats, height = 3, width = 10)
p.rhats = ggplot(melt.prsf, aes(x = variable, y = value, color = region)) +
geom_point(size = 3) +
geom_hline(color = 'red', yintercept = 1.01) +
theme_minimal(base_size = 12) +
coord_flip() +
ylab('RHat') +
xlab('')
ggsave('2020-10-22_GMBConvergenceRhats.png', p.rhats, height = 2, width = 8)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
theme_minimal(base_size = 12)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
theme_minimal(base_size = 12) +
geom_line(alpha = 0.2, aes()) +
facet_grid(variable~region, scales='free')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 6, width = 7)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
theme_grey(base_size = 12) +
geom_line(alpha = 0.2, aes()) +
facet_grid(variable~region, scales='free')
df.chains = df.chains[df.chains$i_chain != 1,]
df.chains$i_chain = factor(df.chains$i_chain-1)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
theme_grey(base_size = 12) +
geom_line(alpha = 0.2, aes()) +
facet_grid(variable~region, scales='free')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 8, width = 9)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2, aes()) +
facet_grid(variable~region, scales='free')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 8, width = 9)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_grid(variable~region, scales='free')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 6, width = 7)
# Remove Chain 1; only use chains 2-11
df.chains = df.chains[df.chains$i_chain != 1,]
df.chains$i_chain = factor(df.chains$i_chain-1)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_grid(variable~region, scales='free')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 6, width = 7)
head(df.chains)
df.chains = do.call('rbind',lapply(ls.chains, function(x){
n_rows = nrow(x)
temp_df = x
temp_df[n_rows+(1:2),] = temp_df[n_rows,]
temp_df[n_rows+(1:2),colnames(df.constraints)] = df.constraints
return(melt(temp_df, c('idx', 'i_chain', 'LogLikelihood', 'region')))
}))
df.chains = df.chains[!(df.chains$region == 'wash' & df.chains$i_chain == 4),]
# Remove Chain 1; only use chains 2-11
df.chains = df.chains[df.chains$i_chain != 1,]
df.chains$i_chain = factor(df.chains$i_chain-1)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_grid(variable~region, scales='free')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 6, width = 7)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_grid(region~variable, scales='free')
ggsave('2020-10-22_TracePlots.png', p.traces, height = 4, width = 9)
for(i_region in c('nyc', 'sflor', 'wash')){
print(i_region)
}
for(i_region in c('nyc', 'sflor', 'wash')){
p.traces = ggplot(df.chains[df.chains$region == i_region,]
, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet+wrap('variable', scales='free', ncol = 3)
ggsave(paste('2020-10-22_', i_region, '_TracePlots.png', sep='', collapse='')
, p.traces, height = 5, width = 8)
}
for(i_region in c('nyc', 'sflor', 'wash')){
p.traces = ggplot(df.chains[df.chains$region == i_region,]
, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_wrap('variable', scales='free', ncol = 3)
ggsave(paste('2020-10-22_', i_region, '_TracePlots.png', sep='', collapse='')
, p.traces, height = 5, width = 8)
}
for(i_region in c('nyc', 'sflor', 'wash')){
p.traces = ggplot(df.chains[df.chains$region == i_region,]
, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_wrap('variable', scales='free', ncol = 3) +
theme(legend.position = 'bottom')
ggsave(paste('2020-10-22_', i_region, '_TracePlots.png', sep='', collapse='')
, p.traces, height = 5, width = 8)
}
.
for(i_region in c('nyc', 'sflor', 'wash')){
p.traces = ggplot(df.chains[df.chains$region == i_region,]
, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_wrap('variable', scales='free', ncol = 3) +
scale_color_brewer(palette = 'Paired')
ggsave(paste('2020-10-22_', i_region, '_TracePlots.png', sep='', collapse='')
, p.traces, height = 5, width = 9)
}
for(i_region in c('nyc', 'sflor', 'wash')){
p.traces = ggplot(df.chains[df.chains$region == i_region,]
, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_wrap('variable', scales='free', ncol = 3)
ggsave(paste('2020-10-22_', i_region, '_TracePlots.png', sep='', collapse='')
, p.traces, height = 5, width = 9)
}
p.traces = ggplot(df.chains
, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_grid(variable~region, scales='free', ncol = 3)
ggsave('2020-10-22_TracePlots.png', p.traces, height = 11, width = 9)
df.chains = do.call('rbind',lapply(ls.chains, function(x){
n_rows = nrow(x)
temp_df = x
temp_df[n_rows+(1:2),] = temp_df[n_rows,]
temp_df[n_rows+(1:2),colnames(df.constraints)] = df.constraints
return(melt(temp_df, c('idx', 'i_chain', 'LogLikelihood', 'region')))
}))
df.chains = df.chains[!(df.chains$region == 'wash' & df.chains$i_chain == 4),]
# Remove Chain 1; only use chains 2-11
df.chains = df.chains[df.chains$i_chain != 1,]
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_grid(variable~region, ncol = 3)
ggsave('2020-10-22_TracePlots.png', p.traces, height = 11, width = 9)
head(df.chains)
table(chains$region()
()
table(chains$region)
table(df.chains$region)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_grid(variable~region, ncol = 3)
p.traces = ggplot(df.chains, aes(x = idx, y = value, color = i_chain)) +
geom_line(alpha = 0.2) +
facet_grid(variable~region)
ggsave('2020-10-22_TracePlots.png', p.traces, height = 11, width = 9)
source('~/CYZ GITHUB/Weitz Group/COVID-19/Lopman Covid SeroPos/Serological_Shielding/CYZ_reorg/Matlab/adhoc_visualize_MCMC_traces.R')
